Maven


Build Automation Tool

Pre requisite for any project:
JDK1.8/any other version
Selenium jar files
Junit/testNG jar files
Apache POI
log4j API
Cucumber


How maven helps?

Instead of downloading the jar files\
In maven all the jars file are maintained in a maven centralized repository which are categorized under certain dependencies based on their versions
Selenium designed by thoughtWorks

Maven(plugin client) send the request to maven centralized repo and ask for the jars: 
request will go in the form of dependencies having following features:

group ID
artifact ID
version

Latest version would get automatically downloaded

.m2 repository will get added in to your system (client system) then from .m2 to eclipse project

SOmetimes for Internal jars are also used within the projects


Local maven repository need to be created for internal case for which maven helps.

Maven Architecture:

CLient{Eclipse}-> Centralized maven repo. 
Client{Eclipse}-> Local maven Repo.




Maven Setup, plugins

Maven Life Cycle:
1. Maven Compile (done by Maven complier plugin)
2. Maven test (unit/integration/functional TCs in JUnit/testNG done by maven Surefire Plugin)
3. Maven resources(generate jar file) (done by Maven resource plugin)

Maven can create JAR, WAR, EAR(Java acrhival file, web archival file, Enterprise archival file)

Gradle/Ant are tools other than Maven



Commands to exceute a maven project

-mvn clean install
It'll create the build or creating corresponding jar file

-mvn test

-mvn package -DskipTests
Only to generate the build

For this a property need to be addded in POM file:

<properties>
<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
<maven.test.skip>true</maven.test.skip>
</properties>

mvn package -Dmaven.test.skip=true

for executing multiple classes we need to add multiple plugins for maven (i.e, complier plugin, surefire plugin, resources plugin)


